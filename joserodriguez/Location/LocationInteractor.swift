//
//  LocationInteractor.swift
//  joserodriguez
//
//  Created WHIZ on 23/12/22.
//  Copyright Â© 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by UPAX Zeus
//

import UIKit

import RxSwift

class LocationInteractor: LocationInteractorInputProtocol {
    weak var presenter: LocationInteractorOutputProtocol?
    
    private let webService = WebService()
    private let disposeBag = DisposeBag()
    
    
    func prepareData(lat: String, lon: String)  {
        
        webService.load(modelType: LocationResponse.self, from: .listLocation(serviceType: .LocationList(lat: lat, lon: lon)))
            .observeOn(MainScheduler.instance)
            .subscribe(onNext: { [weak self] (results) in
                results.validate {
                 self?.presenter?.fetchedDataSuccess(data: results)
                }
            }, onError: { [weak self] (error) in
               // self?.presenter?.fetchedDataError()
                print("error")
            }).disposed(by: disposeBag)
        
        
    }
}
